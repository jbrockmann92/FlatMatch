@model FlatMatchApp.Models.Leaseholder

@{
    ViewData["Title"] = "Details";
    Layout = "~/Views/Shared/_RenterLayout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>Details</title>
</head>
<body>

    <p>
        <body onload="initialize()">
            <div id="map"></div>
        </body>
    </p>

    <div>
        <h4>Property Details</h4>
        <hr />
        <dl class="row">
            <dt class="col-sm-2">
                Leaseholder:
            </dt>
            <dd class="col-sm-10">
                @Html.DisplayFor(model => model.FirstName) @Html.DisplayFor(model => model.LastName)
            </dd>
        </dl>
    </div>
    <div>
        <a asp-action="Index">Back to List</a>
    </div>

    <script>
    var geocoder;
    var map;
    //var labels = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    //var labelIndex = 0;
    function initialize() {
        geocoder = new google.maps.Geocoder();
        var latlng = new google.maps.LatLng(43.0389, -87.9065); //This is from https://developers.google.com/maps/documentation/javascript/geocoding#GeocodingRequests
        var mapOptions = {
            zoom: 14,
            center: latlng
        }
        map = new google.maps.Map(document.getElementById('map'), mapOptions);
        codeAddress();
    }

    @*function codeAddress() {
        var addresses = [];
        @foreach (var leaseholder in Model.Leaseholders)
        {
            @:addresses.push("@leaseholder.Property.Address.StreetName + @leaseholder.Property.Address.City + @leaseholder.Property.Address.State")
        }
        for (var i = 0; i < @Model; i++) {
            var address = addresses[i];
            geocoder.geocode( { 'address': address}, function(results, status) {
                if (status == 'OK') {
                    map.setCenter(results[0].geometry.location);
                    var marker = new google.maps.Marker({
                        //label: labels[labelIndex++], //couldn't get labels to work, commenting out to potentially add later
                        map: map,
                        position: results[0].geometry.location
                    });
                } else {
                    alert('Geocode was not successful for the following reason: ' + status);
                }
            });
        }
    }*@
    </script>

    <script async defer
            src="https://maps.googleapis.com/maps/api/js?key= + @API_KEYS.GoogleAPI">
    </script>
    <script type="text/javascript" src="~/js/site.js"></script>

</body>
</html>
